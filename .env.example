# Environment Configuration Examples
# Copy this file to .env and customize for your environment

# =============================================================================
# APPLICATION SETTINGS
# =============================================================================
APP_NAME="Inference Core"
APP_TITLE= "Inference Core"
APP_DESCRIPTION="A ready-to-use FastAPI backend with Celery-powered background tasks and first-class LLM integration using LangChain."
APP_VERSION=0.2.0
ENVIRONMENT=development
DEBUG=true
HOST=0.0.0.0
PORT=8000
APP_PUBLIC_URL=http://localhost:8000

# =============================================================================
# CORS CONFIGURATION
# =============================================================================
# IMPORTANT: Environment files only support string values, not arrays!
# Lists should be comma-separated strings (no brackets, no quotes)

# CORS methods - comma-separated HTTP methods  
CORS_METHODS=GET,POST,PUT,DELETE,OPTIONS
# Or allow all methods:
# CORS_METHODS=*

# CORS origins - comma-separated URLs (no spaces around commas)
CORS_ORIGINS=http://localhost:3000,http://localhost:8000,https://yourdomain.com
# For development, you can use wildcard (be careful in production!)
# CORS_ORIGINS=*

# CORS headers - use "*" for all headers or specify comma-separated list
CORS_HEADERS=*
# Or specific headers:
# CORS_HEADERS=Content-Type,Authorization,X-Requested-With

# =============================================================================
# TRUSTED HOST CONFIGURATION (separate from CORS)
# =============================================================================
# ALLOWED_HOSTS controls which Host headers are trusted by TrustedHostMiddleware
# This is separate from CORS origins which control browser cross-origin requests
# 
# If not set, hostnames will be derived from CORS_ORIGINS by normalizing URLs
# Examples: https://app.com:8080 -> app.com, http://localhost:3000 -> localhost
# 
# For production, specify exact hostnames/IPs:
# ALLOWED_HOSTS=yourdomain.com,api.yourdomain.com,127.0.0.1
# 
# For development, localhost/127.0.0.1 are automatically included
# Use "*" to allow all hosts (not recommended for production):
# ALLOWED_HOSTS=*

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================

# Select database backend (async drivers required)
#   - sqlite+aiosqlite (default for local dev)
#   - postgresql+asyncpg
#   - mysql+aiomysql
# DATABASE_SERVICE=sqlite+aiosqlite

# SQLite (Development) - Default
# DATABASE_URL=sqlite+aiosqlite:///./inference_core.db
# DATABASE_ECHO=true

# DATABASE_PORT=5432  # Default PostgreSQL port
# DATABASE_HOST=localhost
# DATABASE_NAME=app_db
# DATABASE_USER=db_user
# DATABASE_PASSWORD=your_password
# DATABASE_ROOT_PASSWORD=your_root_password

# PostgreSQL (Recommended for Production)
# DATABASE_URL=postgresql+asyncpg://username:password@localhost:5432/dbname
# DATABASE_POOL_SIZE=20
# DATABASE_MAX_OVERFLOW=30
# DATABASE_POOL_TIMEOUT=30
# DATABASE_POOL_RECYCLE=3600

# MySQL (Alternative for Production)
# DATABASE_URL=mysql+aiomysql://username:password@localhost:3306/dbname
# DATABASE_POOL_SIZE=20
# DATABASE_MAX_OVERFLOW=30
# DATABASE_POOL_TIMEOUT=30
# DATABASE_POOL_RECYCLE=3600
# DATABASE_MYSQL_CHARSET=utf8mb4
# DATABASE_MYSQL_COLLATION=utf8mb4_unicode_ci

# =============================================================================
# CELERY & REDIS CONFIGURATION
# =============================================================================

# Celery broker and result backend
# For local development, Redis on localhost. In Docker, the hostname is 'redis'.
# CELERY_BROKER_URL=redis://localhost:6379/0
# CELERY_RESULT_BACKEND=redis://localhost:6379/1

# Enable remote debugging for Celery worker (1 to enable)
# DEBUG_CELERY=0

# Redis port (used by docker-compose for both host and container)
# REDIS_PORT=6379

# Flower monitoring UI port (used by docker-compose for both host and container)
# FLOWER_PORT=5555

# =============================================================================
# AUTH / JWT CONFIGURATION
# =============================================================================
# SECRET_KEY=change-me-in-production
# ALGORITHM=HS256
# ACCESS_TOKEN_EXPIRE_MINUTES=30
# REFRESH_TOKEN_EXPIRE_DAYS=7

# User Activation and Email Verification Settings
# AUTH_REGISTER_DEFAULT_ACTIVE=true
# AUTH_SEND_VERIFICATION_EMAIL_ON_REGISTER=false
# AUTH_LOGIN_REQUIRE_ACTIVE=true
# AUTH_LOGIN_REQUIRE_VERIFIED=false
# AUTH_EMAIL_VERIFICATION_MAKES_ACTIVE=true
# AUTH_EMAIL_VERIFICATION_TOKEN_TTL_MINUTES=60
# AUTH_EMAIL_VERIFICATION_URL_BASE=

# =============================================================================
# APP REDIS (AUTH REFRESH SESSIONS)
# =============================================================================
# Separate from Celery broker/backend. Used by the API for auth refresh sessions.
# REDIS_URL=redis://localhost:6379/10
# REDIS_REFRESH_PREFIX=auth:refresh:

# =============================================================================
# LLM CONFIGURATION
# =============================================================================

# Provider API keys (used by llm_config.yaml providers.api_key_env)
# OPENAI_API_KEY=
# GOOGLE_API_KEY=
# CUSTOM_LLM_API_KEY=
# ANTHROPIC_API_KEY=

# Task model overrides (used by llm_config.yaml settings.env_overrides)
# LLM_EXPLAIN_MODEL=gpt-5-mini
# LLM_CONVERSATION_MODEL=gpt-5-mini

# LLM fallback-only toggles (used when YAML is missing or for local tweaks)
# LLM_ENABLE_CACHING=true
# LLM_CACHE_TTL=3600
# LLM_MAX_CONCURRENT=5
# LLM_ENABLE_MONITORING=true

# RUN_LLM_REAL_TESTS=0

# =============================================================================
# EMAIL CONFIGURATION
# =============================================================================

# SMTP Configuration (used by email_config.yaml)
# Primary SMTP host credentials
# SMTP_PRIMARY_USERNAME=your-email@gmail.com
# SMTP_PRIMARY_PASSWORD=your-app-password

# Backup SMTP host credentials  
# SMTP_BACKUP_USERNAME=postmaster@your-domain.mailgun.org
# SMTP_BACKUP_PASSWORD=your-mailgun-password

# Office 365 SMTP credentials
# SMTP_O365_USERNAME=noreply@yourcompany.com
# SMTP_O365_PASSWORD=your-o365-password

# Public URL for email links (password reset, etc.)
# APP_PUBLIC_URL=https://yourdomain.com

# =============================================================================
# SENTRY CONFIGURATION
# =============================================================================
# SENTRY_DSN=https://your-sentry-dsn
# SENTRY_TRACES_SAMPLE_RATE=0.1  # Adjust based on your needs (0.0 to 1.0)
# SENTRY_PROFILES_SAMPLE_RATE=0.1  # Adjust based on your needs (0.0 to 1.0)