services:
  # Inference Core Application
  inference-core:
    environment:
      DATABASE_SERVICE: postgresql+asyncpg
      DATABASE_HOST: postgres
      DATABASE_PORT: ${DATABASE_PORT:-5432}
      DATABASE_NAME: ${DATABASE_NAME:-app_db}
      DATABASE_USER: ${DATABASE_USER:-db_user}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD:-db_password}

  # Celery Worker
  celery-worker:
    environment:
      DATABASE_SERVICE: postgresql+asyncpg
      DATABASE_HOST: postgres
      DATABASE_PORT: ${DATABASE_PORT:-5432}
      DATABASE_NAME: ${DATABASE_NAME:-app_db}
      DATABASE_USER: ${DATABASE_USER:-db_user}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD:-db_password}

  postgres:
    image: postgres:17
    container_name: ${APP_NAME:-backend-template}-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DATABASE_NAME:-app_db}
      POSTGRES_USER: ${DATABASE_USER:-db_user}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD:-db_password}
    ports:
      - '${DATABASE_PORT:-5432}:${DATABASE_PORT:-5432}'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - inference-core-network
    healthcheck:
      test:
        [
          'CMD-SHELL',
          'pg_isready -U ${DATABASE_USER:-db_user} -d ${DATABASE_NAME:-app_db}',
        ]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
    driver: local
