# Environment Configuration for Test Docker Environment
# Copy this file to .env.test and customize for your test environment

# =============================================================================
# TEST APPLICATION SETTINGS
# =============================================================================
APP_NAME="backend-template-test"
APP_TITLE="FastAPI LLM Backend Test"
APP_DESCRIPTION="Test environment for FastAPI backend template"
APP_VERSION=0.1.2
ENVIRONMENT=testing
DEBUG=false
HOST=0.0.0.0
PORT=8100

# =============================================================================
# TEST PORTS (Alternative ports to avoid conflicts with development)
# =============================================================================
# Main application port (alternative to avoid conflict with dev:8000)
PORT=8100

# Redis port (alternative to avoid conflict with dev:6379)
REDIS_PORT=6380

# Flower monitoring port (alternative to avoid conflict with dev:5555)
FLOWER_PORT=5556

# Database ports (alternatives to avoid conflicts)
DATABASE_PORT_POSTGRES=55432
DATABASE_PORT_MYSQL=33306

# =============================================================================
# TEST DATABASE CONFIGURATION
# =============================================================================

# PostgreSQL (Test)
DATABASE_NAME=app_test_db
DATABASE_USER=test_user
DATABASE_PASSWORD=test_password
DATABASE_ROOT_PASSWORD=test_root_password

# =============================================================================
# TEST CELERY & REDIS CONFIGURATION
# =============================================================================

# Celery broker and result backend (distinct DB indices for testing)
CELERY_BROKER_URL=redis://redis-test:6380/0
CELERY_RESULT_BACKEND=redis://redis-test:6380/1

# =============================================================================
# TEST AUTH / JWT CONFIGURATION
# =============================================================================
# Use non-production secrets (DO NOT reuse in production!)
SECRET_KEY=test-secret-key-do-not-use-in-production
ALGORITHM=HS256
ACCESS_TOKEN_EXPIRE_MINUTES=30
REFRESH_TOKEN_EXPIRE_DAYS=7

# =============================================================================
# TEST APP REDIS (AUTH REFRESH SESSIONS)
# =============================================================================
# Separate from Celery broker/backend. Uses distinct DB index for testing.
REDIS_URL=redis://redis-test:6380/10
REDIS_REFRESH_PREFIX=test:auth:refresh:

# =============================================================================
# CORS CONFIGURATION (Testing)
# =============================================================================
CORS_METHODS=GET,POST,PUT,DELETE,OPTIONS
CORS_ORIGINS=http://localhost:8100,http://localhost:3000
CORS_HEADERS=*

# =============================================================================
# LLM CONFIGURATION (Testing)
# =============================================================================

# Provider API keys (use test/mock keys if available)
# OPENAI_API_KEY=
# CUSTOM_LLM_API_KEY=
# CUSTOM_LLM_API_KEY=
# ANTHROPIC_API_KEY=

# Task model overrides (use faster/cheaper models for testing)
# LLM_COMPLETION_MODEL=gpt-3.5-turbo
# LLM_CHAT_MODEL=gpt-3.5-turbo

# LLM test settings
LLM_ENABLE_CACHING=false
LLM_CACHE_TTL=300
LLM_MAX_CONCURRENT=2
LLM_ENABLE_MONITORING=false

# Disable real LLM tests by default in Docker environment
RUN_LLM_REAL_TESTS=0

# =============================================================================
# SENTRY CONFIGURATION (Testing - typically disabled)
# =============================================================================
# SENTRY_DSN=
# SENTRY_TRACES_SAMPLE_RATE=0.0
# SENTRY_PROFILES_SAMPLE_RATE=0.0