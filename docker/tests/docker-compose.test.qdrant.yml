# Docker Compose for Isolated Test Environment - Qdrant Vector Store
# Ports: inference-core-test:8100, redis-test:6380, qdrant-test:56333
# Usage: docker compose -f docker/tests/docker-compose.test.qdrant.yml --env-file .env.test.example up -d
# Cleanup: docker compose -f docker/tests/docker-compose.test.qdrant.yml down -v

name: ${APP_NAME:-inference-core-test}-qdrant

services:
  # Inference Core Application (Test)
  inference-core-test:
    build:
      context: ../..
      dockerfile: docker/tests/Dockerfile
    container_name: ${APP_NAME:-inference-core-test}-api
    restart: unless-stopped
    command:
      [
        'uvicorn',
        'inference_core.main_factory:create_application',
        '--factory',
        '--port',
        '${PORT:-8100}',
        '--host',
        '${HOST:-0.0.0.0}',
        '--workers',
        '2',
      ]
    ports:
      - '${PORT:-8100}:${PORT:-8100}'
    environment:
      ENVIRONMENT: testing
      APP_NAME: ${APP_NAME:-inference-core-test}
      APP_DESCRIPTION: ${APP_DESCRIPTION:-Test environment for Inference Core backend with Qdrant}
      APP_VERSION: ${APP_VERSION:-1.0.0}
      # Database left default (e.g. sqlite) - adjust if needed
      DATABASE_SERVICE: ${DATABASE_SERVICE:-sqlite+aiosqlite}
      DATABASE_URL: ${DATABASE_URL:-sqlite+aiosqlite:///tmp/app_test.db}
      CELERY_BROKER_URL: redis://redis-test:${REDIS_PORT:-6380}/0
      CELERY_RESULT_BACKEND: redis://redis-test:${REDIS_PORT:-6380}/1
      REDIS_URL: redis://redis-test:${REDIS_PORT:-6380}/10
      SECRET_KEY: ${SECRET_KEY:-test-secret-key-do-not-use-in-production}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${ACCESS_TOKEN_EXPIRE_MINUTES:-30}
      REFRESH_TOKEN_EXPIRE_DAYS: ${REFRESH_TOKEN_EXPIRE_DAYS:-7}
      REDIS_REFRESH_PREFIX: ${REDIS_REFRESH_PREFIX:-test:auth:refresh:}
      RUN_LLM_REAL_TESTS: ${RUN_LLM_REAL_TESTS:-0}
      DEBUG: ${DEBUG:-false}
      # Vector store configuration
      VECTOR_BACKEND: qdrant
      QDRANT_URL: http://qdrant-test:${QDRANT_TEST_PORT_HTTP:-56333}
      VECTOR_COLLECTION_DEFAULT: ${VECTOR_COLLECTION_DEFAULT:-test_documents}
    networks:
      - test-network
    depends_on:
      qdrant-test:
        condition: service_healthy
      redis-test:
        condition: service_healthy
    healthcheck:
      test:
        [
          'CMD',
          'curl',
          '-f',
          'http://localhost:${PORT:-8100}/api/v1/health/ping',
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s

  # Celery Worker (Test)
  celery-worker-test:
    build:
      context: ../..
      dockerfile: docker/tests/Dockerfile
    container_name: ${APP_NAME:-inference-core-test}-celery-worker
    restart: unless-stopped
    command: >
      sh -c "poetry run celery -A inference_core.celery.celery_main:celery_app worker
             --loglevel=info
             --queues=default,llm_tasks
             --hostname=test-worker@%h 
             --pool=gevent
             --autoscale=200,10"
    environment:
      ENVIRONMENT: testing
      DATABASE_SERVICE: ${DATABASE_SERVICE:-sqlite+aiosqlite}
      DATABASE_URL: ${DATABASE_URL:-sqlite+aiosqlite:///tmp/inference_core_test.db}
      CELERY_BROKER_URL: redis://redis-test:${REDIS_PORT:-6380}/0
      CELERY_RESULT_BACKEND: redis://redis-test:${REDIS_PORT:-6380}/1
      SECRET_KEY: ${SECRET_KEY:-test-secret-key-do-not-use-in-production}
      RUN_LLM_REAL_TESTS: ${RUN_LLM_REAL_TESTS:-0}
      VECTOR_BACKEND: qdrant
      QDRANT_URL: http://qdrant-test:${QDRANT_TEST_PORT_HTTP:-56333}
      VECTOR_COLLECTION_DEFAULT: ${VECTOR_COLLECTION_DEFAULT:-test_documents}
    depends_on:
      qdrant-test:
        condition: service_healthy
      redis-test:
        condition: service_healthy
    networks:
      - test-network

  # Qdrant Vector Store (Test)
  qdrant-test:
    image: qdrant/qdrant:latest
    container_name: ${APP_NAME:-inference-core-test}-qdrant
    restart: unless-stopped
    ports:
      - '${QDRANT_TEST_PORT_HTTP:-56333}:6333'
      - '${QDRANT_TEST_PORT_GRPC:-56334}:6334'
    # Ephemeral storage (tmpfs) to keep test runs isolated & fast
    tmpfs:
      - /qdrant/storage:noexec,nosuid,size=256m
    networks:
      - test-network
    healthcheck:
      test:
        [
          'CMD',
          'wget',
          '-qO-',
          'http://localhost:${QDRANT_TEST_PORT_HTTP:-56333}/collections',
        ]
      interval: 20s
      timeout: 5s
      retries: 5
      start_period: 10s

  # Redis for Celery and App Sessions (Test)
  redis-test:
    image: redis:7-alpine
    container_name: ${APP_NAME:-inference-core-test}-redis
    restart: unless-stopped
    ports:
      - '${REDIS_PORT:-6380}:${REDIS_PORT:-6380}'
    command: redis-server --appendonly no --port ${REDIS_PORT:-6380} --save ""
    tmpfs:
      - /data:noexec,nosuid,size=100m
    networks:
      - test-network
    healthcheck:
      test: ['CMD', 'redis-cli', '-p', '${REDIS_PORT:-6380}', 'ping']
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s

networks:
  test-network:
    driver: bridge
    name: ${APP_NAME:-inference-core-test}-qdrant-network
